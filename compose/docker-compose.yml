version: "3.9"
services:
  api:
    image: iotportaldevicemanagement-api
    container_name: iotportaldevicemanagement-api
    labels:
      - "com.iotportaldevicemanagement.product=iotportaldevicemanagement"
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "10"
    restart: always
#    read_only: true
#    depends_on:
#      - ${DB_HOST}
#      - ${MQTT_HOST}
#      - ${REDIS_HOST}
    environment:
      - APP_NAME=${APP_NAME}
      - APP_ENV=${APP_ENV}
      - APP_KEY=${APP_KEY}
      - APP_DEBUG=${APP_DEBUG}
      - APP_HOST=${APP_HOST}
      - APP_URL=${APP_URL}
      - FRONTEND_URL=${FRONTEND_URL}

      - LOG_CHANNEL=${LOG_CHANNEL}
      - LOG_DEPRECATIONS_CHANNEL=${LOG_DEPRECATIONS_CHANNEL}
      - LOG_LEVEL=${LOG_LEVEL}

      - DB_CONNECTION=${DB_CONNECTION}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}

      - BROADCAST_DRIVER=${BROADCAST_DRIVER}
      - CACHE_DRIVER=${CACHE_DRIVER}
      - FILESYSTEM_DISK=${FILESYSTEM_DISK}
      - QUEUE_CONNECTION=${QUEUE_CONNECTION}
      - SESSION_DRIVER=${SESSION_DRIVER}
      - SESSION_LIFETIME=${SESSION_LIFETIME}

      - MEMCACHED_HOST=${MEMCACHED_HOST}

      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_PORT=${REDIS_PORT}

      - MAIL_MAILER=${MAIL_MAILER}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ENCRYPTION=${MAIL_ENCRYPTION}
      - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
      - MAIL_FROM_NAME=${MAIL_FROM_NAME}

      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
      - AWS_BUCKET=${AWS_BUCKET}
      - AWS_USE_PATH_STYLE_ENDPOINT=${AWS_USE_PATH_STYLE_ENDPOINT}

      - PUSHER_APP_ID=${PUSHER_APP_ID}
      - PUSHER_APP_KEY=${PUSHER_APP_KEY}
      - PUSHER_APP_SECRET=${PUSHER_APP_SECRET}
      - PUSHER_APP_CLUSTER=${PUSHER_APP_CLUSTER}

      - MIX_PUSHER_APP_KEY="${MIX_PUSHER_APP_KEY}"
      - MIX_PUSHER_APP_CLUSTER="${MIX_PUSHER_APP_CLUSTER}"
#    volumes:
#      - ../iotportaldata/env/.env:/var/www/.env
#      - ../iotportaldata/app/storage/app:/var/www/storage/app
#      - ../iotportaldata/app/storage/framework:/var/www/storage/framework
#      - ../iotportaldata/ca-certificates:/iotportal/ca-certificates
    networks:
      - iotportaldevicemanagement

  nginx:
    image: iotportaldevicemanagement-nginx
    container_name: iotportaldevicemanagement-nginx
    labels:
      - "com.iotportaldevicemanagement.product=iotportaldevicemanagement"
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "10"
    restart: always
#    read_only: true
#    depends_on:
#      - ${NGINX_PHP_UPSTREAM_CONTAINER}
#    volumes:
#      - ../iotportaldata/nginx/nginx.conf:/etc/nginx/nginx.conf
#      - ../iotportaldata/nginx/sites-available:/etc/nginx/sites-available
#      - ../iotportaldata/ssl:/etc/nginx/ssl
#    tmpfs:
#      - /var/cache/nginx:uid=${LOCAL_UID},gid=${LOCAL_GID}
#      - /run:uid=${LOCAL_UID},gid=${LOCAL_GID}
    ports:
      - "${NGINX_HTTP_PORT:-80}:80"
#      - "${NGINX_HTTPS_PORT:-443}:443"
    networks:
      - iotportaldevicemanagement

  postgres:
    image: iotportaldevicemanagement-postgres
    container_name: iotportaldevicemanagement-postgres
    labels:
      - "com.iotportaldevicemanagement.product=iotportaldevicemanagement"
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "10"
    restart: always
    #    read_only: true
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    #    volumes:
    #      - ../iotportaldata/mysql/data:/var/lib/mysql
    #      - ../iotportaldata/ssl:/mysql/ssl
    #    tmpfs:
    #      - /tmp:uid=${LOCAL_UID},gid=${LOCAL_GID}
    #      - /run/mysqld:uid=${LOCAL_UID},gid=${LOCAL_GID}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    networks:
      - iotportaldevicemanagement

  vernemq:
    image: iotportaldevicemanagement-vernemq
    container_name: iotportaldevicemanagement-vernemq
    labels:
      - "com.iotportaldevicemanagement.product=iotportaldevicemanagement"
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "10"
    restart: always
#    read_only: true
    environment:
      - DOCKER_VERNEMQ_ACCEPT_EULA=${DOCKER_VERNEMQ_ACCEPT_EULA}
      - DOCKER_VERNEMQ_ALLOW_ANONYMOUS=${DOCKER_VERNEMQ_ALLOW_ANONYMOUS}
      - DOCKER_VERNEMQ_LOG__CONSOLE=${DOCKER_VERNEMQ_LOG__CONSOLE}
      - DOCKER_VERNEMQ_SYSTREE_ENABLED=${DOCKER_VERNEMQ_SYSTREE_ENABLED}
#     -  DOCKER_VERNEMQ_LISTENER__SSL__CAFILE=${DOCKER_VERNEMQ_LISTENER__SSL__CAFILE}
#     -  DOCKER_VERNEMQ_LISTENER__SSL__CERTFILE=${DOCKER_VERNEMQ_LISTENER__SSL__CERTFILE}
#     -  DOCKER_VERNEMQ_LISTENER__SSL__KEYFILE=${DOCKER_VERNEMQ_LISTENER__SSL__KEYFILE}
      - DOCKER_VERNEMQ_PLUGINS__VMQ_ACL=${DOCKER_VERNEMQ_PLUGINS__VMQ_ACL}
      - DOCKER_VERNEMQ_PLUGINS__VMQ_WEBHOOKS=${DOCKER_VERNEMQ_PLUGINS__VMQ_WEBHOOKS}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER__HOOK=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER__HOOK}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER__ENDPOINT=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER__ENDPOINT}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE__HOOK=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE__HOOK}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE__ENDPOINT=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE__ENDPOINT}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH__HOOK=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH__HOOK}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH__ENDPOINT=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH__ENDPOINT}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__HOOK=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__HOOK}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__ENDPOINT=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__ENDPOINT}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__HOOK=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__HOOK}
      - DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__ENDPOINT=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__ENDPOINT}
#     - DOCKER_VERNEMQ_VMQ_WEBHOOKS__CAFILE=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__CAFILE}
#     - DOCKER_VERNEMQ_VMQ_WEBHOOKS-_USE_CRLS=${DOCKER_VERNEMQ_VMQ_WEBHOOKS__USE_CRLS}
#    volumes:
#      - ../iotportaldata/vernemq/etc:/vernemq/etc
#      - ../iotportaldata/vernemq/data:/vernemq/data
#      - ../iotportaldata/ssl:/vernemq/ssl
#    tmpfs:
#      - /tmp:uid=${LOCAL_UID},gid=${LOCAL_GID}
    ports:
      - "${DOCKER_VERNEMQ_TCP_PORT:-1883}:1883"
#      - "${DOCKER_VERNEMQ_SSL_PORT:-8883}:8883"
    networks:
      - iotportaldevicemanagement

  web:
    image: iotportaldevicemanagement-web
    container_name: iotportaldevicemanagement-web
    labels:
      - "com.iotportaldevicemanagement.product=iotportaldevicemanagement"
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "10"
    restart: always
    #    read_only: true
    environment:
      - NODE_ENV=${NODE_ENV}
      - NEXT_TELEMETRY_DISABLED=${NEXT_TELEMETRY_DISABLED}
      - NEXT_PUBLIC_BACKEND_URL=${NEXT_PUBLIC_BACKEND_URL}
    #    tmpfs:
    #      - /tmp:uid=${LOCAL_UID},gid=${LOCAL_GID}
    networks:
      - iotportaldevicemanagement

networks:
  iotportaldevicemanagement:
    driver: bridge

# docker compose -f compose/docker-compose.yml --env-file .env.production up -d
# docker compose -f compose/docker-compose.yml --env-file .env.production down
