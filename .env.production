APP_NAME="IoT Portal Device Management"
APP_ENV=production
APP_KEY=base64:eDnz7PgwkBWm63USJvVzNCk7dfINZPdk5z6nnJky66g=
APP_DEBUG=false
APP_HOST=192.168.0.161
APP_URL="http://${APP_HOST}"
FRONTEND_URL="${APP_URL}"
SANCTUM_STATEFUL_DOMAINS="${APP_HOST}"

LOG_CHANNEL=stderr
LOG_DEPRECATIONS_CHANNEL=stderr
LOG_LEVEL=debug

DB_CONNECTION=pgsql
DB_HOST="${APP_HOST}"
DB_PORT=5432
DB_DATABASE=iotportaldevicemanagement
DB_USERNAME=postgres
DB_PASSWORD=admin

BROADCAST_DRIVER=log
CACHE_DRIVER=file
FILESYSTEM_DISK=local
QUEUE_CONNECTION=redis
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_CLIENT=phpredis
REDIS_HOST="${APP_HOST}"
REDIS_USERNAME=iotportaldevicemanagement
REDIS_PASSWORD=REa73KiYig6h34iqakg
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=smtp.mailtrap.io
MAIL_PORT=2525
MAIL_USERNAME=873919ca9b3990
MAIL_PASSWORD=68f42862e37702
MAIL_ENCRYPTION=tls
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_APP_CLUSTER=mt1

MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"


### MQTT ##########################################

MQTT_EXTERNAL_ENDPOINT="${APP_HOST}"
MQTT_HOST="${APP_HOST}"
MQTT_PORT=1883
MQTT_CLIENT_ID_PREFIX=iot
MQTT_CLIENT_ID=iotportaldevicemangement
MQTT_CLEAN_SESSION=true
MQTT_ENABLE_LOGGING=true
#MQTT_TLS_ENABLED=true
#MQTT_TLS_ALLOW_SELF_SIGNED_CERT=true
#MQTT_TLS_VERIFY_PEER=true
#MQTT_TLS_VERIFY_PEER_NAME=true
#MQTT_TLS_CA_FILE=/iotportal/ca-certificates/rootCA.crt
#MQTT_TLS_CA_PATH=null
#MQTT_TLS_CLIENT_CERT_FILE=null
#MQTT_TLS_CLIENT_CERT_KEY_FILE=null
#MQTT_TLS_CLIENT_CERT_KEY_PASSPHRASE=null
MQTT_AUTH_USERNAME=74XtZSWbrqYv9gWz42T
MQTT_AUTH_PASSWORD=REa73KiYig6h34iqakg
MQTT_LAST_WILL_TOPIC=null
MQTT_LAST_WILL_MESSAGE=null
MQTT_LAST_WILL_QUALITY_OF_SERVICE=0
MQTT_LAST_WILL_RETAIN=false
MQTT_CONNECT_TIMEOUT=60
MQTT_SOCKET_TIMEOUT=5
MQTT_RESEND_TIMEOUT=10
MQTT_KEEP_ALIVE_INTERVAL=10


### NGINX #################################################

NGINX_VERSION=1.23.2-alpine

NGINX_HTTP_PORT=80
NGINX_HTTPS_PORT=443

# Environment variables ##

### POSTGRES #################################################

POSTGRES_VERSION=15.0-alpine3.16

POSTGRES_PORT="${DB_PORT}"

# Environment variables ##

MYSQL_SSL_CA=/mysql/ssl/rootCA.crt
MYSQL_SSL_CERT=/mysql/ssl/localhost.crt
MYSQL_SSL_KEY=/mysql/ssl/localhost.key

POSTGRES_DB="${DB_DATABASE}"
POSTGRES_USER="${DB_USERNAME}"
POSTGRES_PASSWORD="${DB_PASSWORD}"


### REDIS ##########################################

DOCKER_REDIS_VERSION=7.0.5-alpine3.16

DOCKER_REDIS_PORT="${REDIS_PORT}"

# Environment variables ##

DOCKER_REDIS_PASSWORD="${REDIS_PASSWORD}"


### VERNEMQ ##########################################

VERNEMQ_VERSION=1.12.3

DOCKER_VERNEMQ_TCP_PORT=1883
#DOCKER_VERNEMQ_SSL_PORT="${MQTT_PORT}"

# Environment variables ##

DOCKER_VERNEMQ_ACCEPT_EULA=yes
DOCKER_VERNEMQ_ALLOW_ANONYMOUS=off
DOCKER_VERNEMQ_LOG__CONSOLE=console
DOCKER_VERNEMQ_SYSTREE_ENABLED=off
DOCKER_VERNEMQ_LISTENER__SSL__CAFILE=/vernemq/ssl/rootCA.crt
DOCKER_VERNEMQ_LISTENER__SSL__CERTFILE=/vernemq/ssl/localhost.crt
DOCKER_VERNEMQ_LISTENER__SSL__KEYFILE=/vernemq/ssl/localhost.key
DOCKER_VERNEMQ_PLUGINS__VMQ_ACL=off
DOCKER_VERNEMQ_PLUGINS__VMQ_WEBHOOKS=on
DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER__HOOK=auth_on_register
DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_REGISTER__ENDPOINT="${APP_URL}/api/mqtt/endpoint"
DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE__HOOK=auth_on_subscribe
DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_SUBSCRIBE__ENDPOINT="${APP_URL}/api/mqtt/endpoint"
DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH__HOOK=auth_on_publish
DOCKER_VERNEMQ_VMQ_WEBHOOKS__AUTH_ON_PUBLISH__ENDPOINT="${APP_URL}/api/mqtt/endpoint"
DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__HOOK=on_client_offline
DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_OFFLINE__ENDPOINT="${APP_URL}/api/mqtt/endpoint"
DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__HOOK=on_client_gone
DOCKER_VERNEMQ_VMQ_WEBHOOKS__ON_CLIENT_GONE__ENDPOINT="${APP_URL}/api/mqtt/endpoint"
DOCKER_VERNEMQ_VMQ_WEBHOOKS__CAFILE=/vernemq/ssl/rootCA.crt
DOCKER_VERNEMQ_VMQ_WEBHOOKS__USE_CRLS=off


### WEB #################################################

NODE_VERSION=16-alpine3.16

# Environment variables ##

NODE_ENV=production
NEXT_TELEMETRY_DISABLED=1
NEXT_PUBLIC_BACKEND_URL="${APP_URL}"
